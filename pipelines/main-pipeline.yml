trigger:
  branches:
    include:
      - main
      
pr:
  branches:
    exclude:
      - '*'

parameters:
  - name: buildConfiguration
    displayName: Build Configuration
    type: string
    default: 'Release'

  - name: dockerRegistryServiceConnection
    displayName: ACR Connection Name
    type: string
    default: 'AzureACRConnection'

  - name: acrLoginServer
    displayName: ACR Login Server
    type: string
    default: 'rzavalikcodetraining.azurecr.io'

  - name: tfWorkingDirectory
    displayName: Terraform Working Directory
    type: string
    default: 'infra'

  - name: imageTag
    displayName: Docker Image Tag
    type: string
    default: '$(Build.BuildId)'

variables:
  buildConfiguration: '${{ parameters.buildConfiguration }}'
  dockerRegistryServiceConnection: '${{ parameters.dockerRegistryServiceConnection }}'
  acrLoginServer: '${{ parameters.acrLoginServer }}'
  tfWorkingDirectory: '${{ parameters.tfWorkingDirectory }}'
  imageTag: '${{ parameters.imageTag }}'

stages:

- stage: BuildTest
  jobs:
  - job: BuildAndTest
    displayName: 'Build and Test .NET Projects'
    pool:
      name: 'Self-hosted'

    steps:
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '9.x'

    - task: DotNetCoreCLI@2
      displayName: 'Restore NuGet Packages'
      inputs:
        command: 'restore'
        projects: 'src/Calculator.sln'

    - task: DotNetCoreCLI@2
      displayName: 'Build Projects'
      inputs:
        command: 'build'
        projects: 'src/Calculator.sln'
        arguments: '--no-dependencies --configuration $(buildConfiguration)'

    - task: DotNetCoreCLI@2
      displayName: 'Execute Unit Tests'
      inputs:
        command: 'test'
        projects: '**/*.Tests.*.csproj'
        arguments: '--configuration $(buildConfiguration) --logger trx --results-directory $(Agent.BuildDirectory)/TestResults'
        
    - task: PublishTestResults@2
      displayName: 'Publish Test Results'
      condition: succeededOrFailed()
      inputs:
        testResultsFiles: '**/TestResults/*.trx'
        searchFolder: '$(Agent.BuildDirectory)/TestResults'
        mergeTestResults: true
        failTaskOnFailedTests: false

- stage: Docker
  dependsOn: BuildTest
  jobs:
  - job: BuildAndPushDocker
    displayName: 'Build and Push Docker Images'
    pool:
      name: 'Self-hosted'

    steps:
    - task: Docker@2
      displayName: 'Build Calculator.API Image'
      inputs:
        repository: 'calculator-api'
        command: 'buildAndPush'
        Dockerfile: 'src/Calculator.API/Dockerfile'
        tags: |
          Calculator.API
        buildContext: 'src'
        containerRegistry: $(dockerRegistryServiceConnection)

    - task: Docker@2
      displayName: 'Build Calculator.UI Image'
      inputs:
        repository: 'calculator-ui'
        command: 'buildAndPush'
        Dockerfile: 'src/Calculator.UI/Dockerfile'
        tags: |
          Calculator.UI
        buildContext: 'src'
        containerRegistry: $(dockerRegistryServiceConnection)
